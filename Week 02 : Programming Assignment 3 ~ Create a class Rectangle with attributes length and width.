//Create a class Rectangle with attributes length and width.
//Provide two constructors: one with no parameters (default to 1) and
//another with parameters to initialize the attributes.
//Use the this keyword to avoid name space collision.
//Create a getArea() function that returns the area of the rectangle.
import java.util.Scanner;
class Rectangle {
// Write the definition of the class here
 /*
  a class is a fundamental concept in object-oriented programming that serves 
  as a blueprint for creating objects. It defines the properties (attributes) and 
  behaviors (methods) that the objects created from the class will have. */
// Create 2 private variables 
   private double length;
   private double width;
// Create a default constructor 
  public Rectangle(){
    this.length = 1;
    this.width = 1;
  }
// Create a parameterised constructor
    public Rectangle(double length, double width){
      this.length = length;
      this.width = width;
    }
// Create getength(), getWidth() and getArea() functions
      public double getWidth(){
        return width;
      }
      
      public double getLength(){
        return length;
      }
      
      public double getArea(){
        return this.length * this.width;
      }  
}

class W02_P3 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read input
        // System.out.print("Enter length: ");
        double length = scanner.nextDouble();
        // System.out.print("Enter width: ");
        double width = scanner.nextDouble();

        // Create Rectangle objects
        Rectangle rect1 = new Rectangle();
        Rectangle rect2 = new Rectangle(length, width);

        // Print rectangle dimensions
        System.out.print("Default Rectangle: L, W, A : ");
        System.out.println(rect1.getLength() + ", " + rect1.getWidth() + ", " + rect1.getArea());
        System.out.print("Parameterised Rectangle: L, W, A : ");
        System.out.print(rect2.getLength() + ", " + rect2.getWidth() + ", " + rect2.getArea());

        scanner.close();
    }
}
